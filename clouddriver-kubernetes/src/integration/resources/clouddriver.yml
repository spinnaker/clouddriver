spring:
  application:
    name: clouddriver

kubernetes:
  kubectl:
    executable: ${KUBECTL_PATH} # Using a wrapper around the kubectl binary provided by the k3s docker container
  enabled: true
  primaryAccount: account1
  accounts:
    - name: account1
      cacheIntervalSeconds: 5
      requiredGroupMembership: []
      providerVersion: V2
      permissions: {}
      dockerRegistries: []
      configureImagePullSecrets: true
      cacheThreads: 3
      namespaces:
        - testns00
        - testns01
        - testns02
        - testns03
        - testns04
      omitNamespaces: []
      kinds:
        - pod
        - replicaset
        - deployment
        - service
        - configmap
        - secret
      omitKinds: []
      customResources: []
      cachingPolicies: []
      oauthScopes: []
      oAuthScopes: []
      onlySpinnakerManaged: true
      metrics: false
      kubeconfigFile: ${KUBECONFIGS_HOME}/kubecfg-${account1_containername}.yml  # File is automatically created during initialization
    - name: account2
      cacheIntervalSeconds: 30
      requiredGroupMembership: []
      providerVersion: V2
      permissions: {}
      dockerRegistries: []
      configureImagePullSecrets: true
      cacheThreads: 1
      namespaces: []
      omitNamespaces: []
      kinds: []
      omitKinds: []
      customResources: []
      cachingPolicies: []
      oauthScopes: []
      oAuthScopes: []
      onlySpinnakerManaged: true
      metrics: false
      kubeconfigFile: ${KUBECONFIGS_HOME}/kubecfg-${account1_containername}.yml  # File is automatically created during initialization

logging.level.com.netflix.spinnaker.cats.sql.cluster: INFO
logging.level.com.netflix.spinnaker.clouddriver.kubernetes.caching.agent.KubernetesCacheDataConverter: WARN

sql:
  enabled: true
  taskRepository:
    enabled: true
  cache:
    enabled: true
    readBatchSize: 500
    writeBatchSize: 300
  scheduler:
    enabled: true
  connectionPools:
    default:
      default: true
      jdbcUrl: jdbc:tc:mysql:5.7.22://somehostname:someport/clouddriver?user=root?password=&
    tasks:
      jdbcUrl: jdbc:tc:mysql:5.7.22://somehostname:someport/clouddriver?user=root?password=&
  migration:
    jdbcUrl: jdbc:tc:mysql:5.7.22://somehostname:someport/clouddriver?user=root?password=&

redis:
  enabled: false
  cache:
    enabled: false
  scheduler:
    enabled: false
  taskRepository:
    enabled: false

services:
  fiat:
    baseUrl: http://fiat.net
  front50:
    baseUrl: http://front50.net
