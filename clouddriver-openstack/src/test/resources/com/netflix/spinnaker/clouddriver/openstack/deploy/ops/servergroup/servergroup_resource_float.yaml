heat_template_version: 2016-04-08
description: A load balanced server for Spinnaker.
parameters:
  flavor:
    type: string
    description: Flavor used by the servers.
  floating_network_id:
    type: string
    description: Network used to allocate a floating IP for each server.
  image:
    type: string
    description: Image used for servers.
  metadata:
    type: json
    description: Server instance metadata.
  network_id:
    type: string
    description: Network used by each server. Retained for auditing purposes.
  security_groups:
    type: comma_delimited_list
    description: Security groups associate to each server.
  subnet_id:
    type: string
    description: Subnet used to allocate a fixed IP for each server.
  user_data:
    type: string
    description: String that will execute upon server boot, if cloud-init is installed.
  scheduler_hints:
    type: json
    description: Key/Value pairs in json format for scheduler_hints
    default: {}
resources:
  server:
    type: OS::Nova::Server
    properties:
      flavor: {get_param: flavor}
      image: {get_param: image}
      metadata: {get_param: metadata}
      networks:
        - subnet: {get_param: subnet_id}
      security_groups: {get_param: security_groups}
      user_data: {get_param: user_data}
      scheduler_hints: {get_param: scheduler_hints}
      user_data_format: RAW
  server_floating_ip:
    type: OS::Neutron::FloatingIP
    properties:
      floating_network_id: {get_param: floating_network_id}
      port_id: {get_attr: [server, addresses, {get_param: network_id}, 0, port]}
  member:
    type: OS::Heat::ResourceGroup
    properties:
      resource_def:
        # this is dynamically generated to associate a load balancer pool member from each listener to each server
        type: servergroup_resource_member.yaml
        properties:
          address: {get_attr: [server, first_address]}
outputs:
  server_ip:
    description: IP Address of the load-balanced server
    value: { get_attr: [server, first_address] }
  lb_member:
    description: LB member details
    value: { get_attr: [member, show] }
