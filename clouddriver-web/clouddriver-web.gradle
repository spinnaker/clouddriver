apply plugin: 'io.spinnaker.package'

ext {
  springConfigLocation = System.getProperty('spring.config.additional-location', "${System.getProperty('user.home')}/.spinnaker/".toString())
}

mainClassName = 'com.netflix.spinnaker.clouddriver.Main'
run {
  systemProperty('spring.config.additional-location', project.springConfigLocation)
}

configurations.all {
  exclude group: 'javax.servlet', module: 'servlet-api'
  exclude group: "org.slf4j", module: "slf4j-log4j12"
}

repositories {
  maven { url "https://adxsnapshots.azurewebsites.net" }
}

dependencies {
  implementation project(":cats:cats-core")
  implementation project(":clouddriver-api")
  implementation project(":clouddriver-artifacts")
  implementation project(":clouddriver-core")
  implementation project(":clouddriver-security")
  implementation project(":clouddriver-sql")

  if (!rootProject.hasProperty("excludeSqlDrivers")) {
    runtimeOnly(project(":clouddriver-sql-mysql"))
  }

  compileOnly "org.projectlombok:lombok"
  annotationProcessor "org.projectlombok:lombok"
  testAnnotationProcessor "org.projectlombok:lombok"

  implementation "com.netflix.frigga:frigga"
  implementation "com.netflix.spinnaker.fiat:fiat-api:$fiatVersion"
  implementation "com.netflix.spinnaker.fiat:fiat-core:$fiatVersion"
  implementation "com.netflix.spinnaker.kork:kork-artifacts"
  implementation "com.netflix.spinnaker.kork:kork-config"
  implementation "com.netflix.spinnaker.kork:kork-swagger"
  implementation "com.netflix.spinnaker.kork:kork-web"
  implementation("com.netflix.spinnaker.kork:kork-plugins")
  implementation "com.netflix.spinnaker.moniker:moniker"
  implementation "commons-io:commons-io"
  implementation "org.codehaus.groovy:groovy-all"
  implementation "org.slf4j:slf4j-api"
  implementation "org.springframework.boot:spring-boot-starter-actuator"
  implementation "org.springframework.boot:spring-boot-starter-json"
  implementation "org.springframework.boot:spring-boot-starter-web"
  implementation "org.springframework.cloud:spring-cloud-context"
  runtimeOnly "org.springframework.cloud:spring-cloud-config-server"

  runtimeOnly "com.netflix.spinnaker.kork:kork-runtime"

  testImplementation project(":clouddriver-elasticsearch")

  testImplementation "org.springframework.boot:spring-boot-starter-test"
  testImplementation "org.spockframework:spock-core"

  // Add each included cloud provider project as a runtime dependency
  gradle.includedCloudProviderProjects.each {
    implementation project(":${it}")
  }
}
