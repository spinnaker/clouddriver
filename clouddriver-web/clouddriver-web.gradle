apply plugin: 'spring-boot'
apply plugin: 'spinnaker.package'

ext {
  springConfigLocation = System.getProperty('spring.config.location', "${System.getProperty('user.home')}/.spinnaker/")
  repackage = System.getProperty('springBoot.repackage', "false")
}

tasks.withType(org.springframework.boot.gradle.run.BootRunTask) {
  systemProperty('spring.config.location', project.springConfigLocation)
}

configurations.all {
  exclude group: 'javax.servlet', module: 'servlet-api'
  exclude group: "org.slf4j", module: "slf4j-log4j12"
  resolutionStrategy.force 'com.microsoft.rest:client-runtime:1.0.0-20160309.002843-19'
}

repositories {
  maven { url "http://adxsnapshots.azurewebsites.net" }
  maven { url "https://oss.sonatype.org/content/repositories/snapshots" }
}

dependencies {
  compile project(':clouddriver-titus')
  compile project(':clouddriver-aws')
  compile project(':clouddriver-azure')
  compile project(':clouddriver-cf')
  compile project(':clouddriver-google')
  compile project(':clouddriver-kubernetes')
  compile project(':clouddriver-openstack')
  compile project(':clouddriver-docker')
  compile project(':clouddriver-eureka')

  runtime spinnaker.dependency('kork')
  compile spinnaker.dependency('korkWeb')
  compile spinnaker.dependency('korkSwagger')
  compile spinnaker.dependency('bootActuator')
  compile spinnaker.dependency('bootDataRest')
  testCompile ("org.springframework.boot:spring-boot-starter-test")
  //this brings in the jetty GzipFilter which boot will autoconfigure
  runtime 'org.eclipse.jetty:jetty-servlets:9.2.11.v20150529'
}

tasks.bootRepackage.enabled = project.repackage

